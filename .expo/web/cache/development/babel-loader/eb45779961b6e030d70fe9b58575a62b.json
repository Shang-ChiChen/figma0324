{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Divider, Image, Input, HStack, Text, Box } from 'native-base';\nimport AlbumScreen from \"../screens/AlbumScreen\";\nimport DetailScreen from \"../screens/DetailScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport DisplaySettingScreen from \"../screens/DisplaySettingScreen\";\nimport MyTheme from \"../Theme\";\nimport albumData from \"../json/albums.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar Navigation = function Navigation() {\n  return _jsx(NavigationContainer, {\n    theme: MyTheme,\n    children: _jsx(MyDrawer, {})\n  });\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    contentContainerStyle: {\n      paddingTop: 0\n    },\n    children: [_jsxs(Box, {\n      height: \"116\",\n      display: \"flex\",\n      mt: \"40px\",\n      mb: \"16px\",\n      ml: \"16px\",\n      safeArea: true,\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      children: [_jsx(Image, {\n        source: require(\"../images/img_avatar.png\"),\n        alt: \"albumImage\"\n      }), _jsx(Text, {\n        fontSize: \"24\",\n        style: {\n          font: font\n        },\n        children: \"May\"\n      })]\n    }), _jsx(Divider, {\n      bg: \"#EDEDEF\",\n      my: \"2\"\n    }), _jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Account\",\n      activeBackgroundColor: colors.primary100,\n      activeTintColor: colors.primary700,\n      inactiveTintColor: colors.light500,\n      labelStyle: {\n        fontSize: 14,\n        fontWeight: '400'\n      },\n      icon: function icon(_ref) {\n        var color = _ref.color;\n        return _jsx(MaterialCommunityIcons, {\n          name: \"account-circle\",\n          color: color,\n          size: 24\n        });\n      }\n    }), _jsx(DrawerItem, {\n      label: \"Setting\",\n      activeBackgroundColor: colors.primary100,\n      activeTintColor: colors.primary700,\n      inactiveTintColor: colors.light500,\n      labelStyle: {\n        fontSize: 14,\n        fontWeight: '400'\n      },\n      icon: function icon(_ref2) {\n        var color = _ref2.color;\n        return _jsx(MaterialCommunityIcons, {\n          name: \"cog\",\n          color: color,\n          size: 24\n        });\n      }\n    })]\n  }));\n};\n\nvar MyDrawer = function MyDrawer() {\n  var _useTheme2 = useTheme(),\n      colors = _useTheme2.colors;\n\n  return _jsx(Drawer.Navigator, {\n    initialRouteName: \"HomeStack\",\n    screenOptions: {\n      drawerActiveBackgroundColor: colors.primary100,\n      drawerActiveTintColor: colors.primary700,\n      drawerInactiveTintColor: colors.light500,\n      drawerStyle: {\n        width: 300\n      },\n      drawerLabelStyle: {\n        fontSize: 14,\n        fontWeight: '400'\n      }\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    children: _jsx(Drawer.Screen, {\n      name: \"MyTabs\",\n      component: MyTabs,\n      options: {\n        headerShown: false,\n        drawerLabel: \"Home\",\n        drawerIcon: function drawerIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: 24\n          });\n        }\n      }\n    })\n  });\n};\n\nvar MyTabs = function MyTabs() {\n  var _useTheme3 = useTheme(),\n      colors = _useTheme3.colors;\n\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"HomeStack\",\n    screenOptions: {\n      tabBarInactiveTintColor: colors.light500,\n      tabBarActiveTintColor: colors.primary700\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeStack\",\n      component: HomeStack,\n      options: {\n        headerShown: false,\n        title: \"Home\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"SettingsStack\",\n      component: SettingsStack,\n      options: {\n        headerShown: false,\n        title: \"Settings\",\n        headerTitleStyle: {\n          fontWeight: '400',\n          fontSize: 20\n        },\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"cog\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    })]\n  });\n};\n\nvar SettingsStack = function SettingsStack(_ref6) {\n  var navigation = _ref6.navigation;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: \"Settings\",\n        headerTitleStyle: {\n          fontWeight: '400',\n          fontSize: 20\n        },\n        headerLeft: function headerLeft() {\n          return _jsx(MaterialCommunityIcons, {\n            name: 'menu',\n            size: 20,\n            onPress: function onPress() {\n              return navigation.openDrawer();\n            },\n            style: {\n              marginRight: 20\n            }\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"DisplaySetting\",\n      component: DisplaySettingScreen,\n      options: {\n        title: \"Display\",\n        headerTitleStyle: {\n          fontWeight: '400',\n          fontSize: 20\n        }\n      }\n    })]\n  });\n};\n\nvar HomeStack = function HomeStack(_ref7) {\n  var navigation = _ref7.navigation;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: AlbumScreen,\n      options: {\n        title: albumData.albumTitle,\n        headerTitleStyle: {\n          fontWeight: '400',\n          fontSize: 20\n        },\n        headerLeft: function headerLeft() {\n          return _jsx(MaterialCommunityIcons, {\n            name: 'menu',\n            size: 20,\n            onPress: function onPress() {\n              return navigation.openDrawer();\n            },\n            style: {\n              marginRight: 20\n            }\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Detail\",\n      component: DetailScreen,\n      options: function options(_ref8) {\n        var route = _ref8.route;\n        return {\n          title: route.params.title,\n          headerStyle: {\n            backgroundColor: '#fff'\n          },\n          headerTintColor: '#000',\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          }\n        };\n      }\n    })]\n  });\n};\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/harry/Downloads/APP-Course-master/APP-Course-master/wk5/E7_StyledDrawer/src/navigation/index.js"],"names":["React","NavigationContainer","useTheme","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","MaterialCommunityIcons","Divider","Image","Input","HStack","Text","Box","AlbumScreen","DetailScreen","SettingsScreen","DisplaySettingScreen","MyTheme","albumData","Stack","Tab","Drawer","Navigation","CustomDrawerContent","props","colors","paddingTop","require","font","primary100","primary700","light500","fontSize","fontWeight","color","MyDrawer","drawerActiveBackgroundColor","drawerActiveTintColor","drawerInactiveTintColor","drawerStyle","width","drawerLabelStyle","MyTabs","headerShown","drawerLabel","drawerIcon","tabBarInactiveTintColor","tabBarActiveTintColor","HomeStack","title","tabBarIcon","SettingsStack","headerTitleStyle","navigation","headerLeft","openDrawer","marginRight","albumTitle","route","params","headerStyle","backgroundColor","headerTintColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport { Divider, Image, Input, HStack, Text, Box } from 'native-base';\n\nimport AlbumScreen from '../screens/AlbumScreen';\nimport DetailScreen from '../screens/DetailScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport DisplaySettingScreen from '../screens/DisplaySettingScreen';\nimport MyTheme from '../Theme';\n\nimport albumData from \"../json/albums.json\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst Navigation = () => {\n  return (\n    <NavigationContainer theme={MyTheme}>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}\n\nconst CustomDrawerContent = (props) => {\n  const { colors } = useTheme();\n\n  return (\n    <DrawerContentScrollView {...props}\n      contentContainerStyle={{ paddingTop: 0 }}\n    >\n      <Box height=\"116\" display=\"flex\" mt=\"40px\" mb=\"16px\" ml=\"16px\" safeArea flexDirection=\"column\" justifyContent=\"space-between\">\n        <Image\n        source={require(\"../images/img_avatar.png\")}\n        alt='albumImage'\n        />\n        <Text fontSize=\"24\" style={{font}}>May</Text>\n      </Box>\n      <Divider bg=\"#EDEDEF\" my=\"2\"/>\n      <DrawerItemList {...props} />\n      <DrawerItem \n        label=\"Account\"\n        activeBackgroundColor={colors.primary100}\n        activeTintColor={colors.primary700}\n        inactiveTintColor={colors.light500}\n        labelStyle={ {fontSize: 14, fontWeight: '400'} }\n        icon={({ color }) => (\n          <MaterialCommunityIcons name=\"account-circle\" color={color} size={24} />\n        )}\n      />\n      <DrawerItem \n        label=\"Setting\"\n        activeBackgroundColor={colors.primary100}\n        activeTintColor={colors.primary700}\n        inactiveTintColor={colors.light500}\n        labelStyle={ {fontSize: 14, fontWeight: '400'} }\n        icon={({ color }) => (\n          <MaterialCommunityIcons name=\"cog\" color={color} size={24} />\n        )}\n      />\n    </DrawerContentScrollView>\n  );\n}\n\nconst MyDrawer = () => {\n  const { colors } = useTheme();\n\n  return (\n    <Drawer.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={{\n        drawerActiveBackgroundColor: colors.primary100,\n        drawerActiveTintColor: colors.primary700,\n        drawerInactiveTintColor: colors.light500,\n        drawerStyle: { width: 300 },\n        drawerLabelStyle: { fontSize: 14, fontWeight: '400' },\n      }}\n      drawerContent={props => <CustomDrawerContent {...props} />}\n    >\n      <Drawer.Screen\n        name=\"MyTabs\"\n        component={MyTabs}\n        options={{\n          headerShown: false,\n          drawerLabel: \"Home\",\n          drawerIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={24} />\n          ),\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nconst MyTabs = () => {\n  const { colors } = useTheme();\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={{\n        tabBarInactiveTintColor: colors.light500,\n        tabBarActiveTintColor: colors.primary700,\n        // headerShown: false\n      }}\n    >\n      <Tab.Screen\n        name=\"HomeStack\"\n        component={HomeStack}\n        options={{\n          headerShown: false,\n          title: \"Home\",\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"SettingsStack\"\n        component={SettingsStack}\n        options={{\n          headerShown: false,\n          title: \"Settings\",\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          },\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"cog\" color={color} size={26} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst SettingsStack = ({ navigation }) => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          title: \"Settings\",\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          },\n          headerLeft: () => (\n            <MaterialCommunityIcons\n              name={'menu'}\n              size={20}\n              onPress={() => navigation.openDrawer()}\n              style={{ marginRight: 20 }}\n            />\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"DisplaySetting\"\n        component={DisplaySettingScreen}\n        options={{\n          title: \"Display\",\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nconst HomeStack = ({ navigation }) => {\n\n  return (\n    <Stack.Navigator\n    // screenOptions={{\n    //   headerShown: false\n    // }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={AlbumScreen}\n        options={{\n          title: albumData.albumTitle,\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          },\n          headerLeft: () => (\n            <MaterialCommunityIcons\n              name={'menu'}\n              size={20}\n              onPress={() => navigation.openDrawer()}\n              style={{ marginRight: 20 }}\n            />\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"Detail\"\n        component={DetailScreen}\n        options={({ route }) => ({\n          title: route.params.title,\n          headerStyle: {\n            backgroundColor: '#fff',\n          },\n          headerTintColor: '#000',\n          headerTitleStyle: {\n            fontWeight: '400',\n            fontSize: 20\n          },\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}